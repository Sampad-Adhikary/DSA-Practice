PROBLEM:
Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.


SOLUTION:

USING DFS:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> answer;
    vector<int> rightSideView(TreeNode* root) {
        if(root == NULL){
            return answer;
        }
        dfs(root,0);
        return answer;
    }
    void dfs(TreeNode* root,int lvl){
        if(root == NULL){
            return;
        }
        if(lvl == answer.size()){
            answer.push_back(root->val);
        }
        dfs(root->right,lvl+1);
        dfs(root->left,lvl+1);

    }
};  
