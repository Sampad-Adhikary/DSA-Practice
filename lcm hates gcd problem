Problem: 
Chef has two integers A and B.

Chef wants to find the minimum value of 1cm(A, X) - gcd(B, X) where X is any positive integer.

Help him determine this value.

Note: gcd (P, Q) denotes the greatest common divisor of P and Q and 1cm(P, Q) denotes the least

common multiple of P and Q.

Input Format

• The first line contains a single integer T-the number of test cases. Then the test cases follow. . The first and only line of each test case contains two space-separated integers A and B-the

integers mentioned in the statement.

Output Format

For each test case, output the minimum value of 1cm(A, X) - gcd(B, X).

Solution:

#include <iostream>
using namespace std;

int gcd(int a, int b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}

long long lcm(int a, int b)
{
    return (a / gcd(a, b)) * b;
}

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t){
	    int a,b;
	    cin>>a>>b;
	    int temp = gcd(a,b);
	    cout<<lcm(a,temp) - gcd(b,temp)<<endl;
	 
	    t--;
	}
	return 0;
}
