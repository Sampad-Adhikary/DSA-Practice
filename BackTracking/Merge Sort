#include<iostream>
#include<vector>
using namespace std;
int count = 0;
void merge(vector<int> &arr,int l,int h){
    int m= l + (h-l)/2;

    int len1 = m-l+1;
    int len2 = h-m;

    int idx = l;
    vector<int> arr1;
    vector<int> arr2;

    for(int i=0;i<len1;i++){
        arr1.push_back(arr[idx++]);
    }
    idx = m+1;
    for(int i=0;i<len2;i++){
        arr2.push_back(arr[idx++]);
    }

    idx = l;
    int idx1 = 0;
    int idx2 = 0;
    while(idx1<len1 && idx2<len2){
        if(arr1[idx1]<arr2[idx2]){
            arr[idx++] = arr1[idx1++];
        }
        else{
            arr[idx++] = arr2[idx2++];
        }
    }

    while(idx1<len1){
        arr[idx++] = arr1[idx1++];
    }
    while(idx2 <len2){
        arr[idx++] = arr2[idx2++];
        count++;
    }

}
void mergeSort(vector<int> &arr,int l,int h){
    if(l>=h){
        return;
    }
    int m= l + (h-l)/2;
    mergeSort(arr,l,m);
    mergeSort(arr,m+1,h);
    merge(arr,l,h);
}
int main(){
    vector<int> arr = {8,4,2,1};
    int n = 4;
    mergeSort(arr, 0, n-1);

    for(int i=0;i<n;i++){
        cout << arr[i] << " ";
    } cout << endl;
    cout<<count;

    return 0;
}
