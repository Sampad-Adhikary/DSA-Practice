#include<iostream>
#include<vector>
using namespace std;
 
int partition(vector<int>& arr,int s,int e){
    int pivot = arr[s];
    int count=0;
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot){
            count++;
        }
    }
    int pivotindex = s+count;
    swap(arr[s],arr[pivotindex]);
    int i=s,j=e;
    while(i<pivotindex && j>pivotindex){
        while(arr[i]<=pivot){
            i++;
        }
        while(arr[j]>pivot){
            j--;
        }
        if(i<pivotindex && j>pivotindex)
            swap(arr[i++],arr[j--]);
    }
    return pivotindex;
}
void sort(vector<int>& arr,int s,int e){
    //base case
    if(s>=e){
        return;
    }
    int p = partition(arr,s,e);
    //left partition sort
    sort(arr,s,p-1);
    //right partition sort
    sort(arr,p+1,e);
}
int main() {

    vector<int> arr = {2,4,1,6,9,9,9,9,9,9};
    int n = 10;

    // quickSort(arr, 0, n-1);
    sort(arr,0,n-1);

    for(int i=0; i<n; i++) 
    {
        cout << arr[i] << " ";
    } cout << endl;


    return 0;
}
