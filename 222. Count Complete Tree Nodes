Problem: 
Given the root of a complete binary tree, return the number of the nodes in the tree.

Solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 inorder travesal approach
 class Solution {
public:
    void inOrdercount(TreeNode *root,int &count){
        if(root == NULL){
            return ;
        }
        inOrdercount(root->left,count);
        count++;
        inOrdercount(root->right,count);
    }
    int countNodes(TreeNode* root) {
        int countNode = 0;
        inOrdercount(root,countNode);
        return countNode;
    }
};
 
 
class Solution {
public:
    int countNodes(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        int count = 0;
        while(!q.empty()){
            TreeNode* temp = q.front();
            q.pop();
            if(temp != NULL){
                count++;
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }
            }

        }
        return count;
    }
};


