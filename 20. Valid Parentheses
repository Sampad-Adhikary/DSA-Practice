Problem:
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true


Solution:
class Solution {
public:
    bool isValid(string s) {
        stack<char> items;
        int len = s.size();
        for(int i=0;i<len;i++){
            if(s[i] =='{' || s[i] == '(' || s[i] == '['){
                items.push(s[i]);
            }
            else{
                if((items.empty()) || (s[i] != '}' && items.top() == '{')||(s[i] != ']' && items.top() == '[')||(s[i] != ')' && items.top() == '(')){
                    return false;
                }
                else{
                    items.pop();
                }
            }
        }
        return items.empty();
    }
};
