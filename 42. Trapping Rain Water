Question: 
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.


Solution:
class Solution {
public:
    
    int trap(vector<int>& height) {
        int count = 0;
        int len = height.size();
        int lArr[len];
        int rArr[len];
        lArr[0] = height[0];
        rArr[len-1] = height[len-1];
        int i=1, j=len-2;
        while(i<len && j>=0){
            lArr[i] = max(lArr[i-1],height[i]);
            rArr[j] = max(rArr[j+1],height[j]);
            i++;
            j--;
        }
        for(int i=0;i<height.size();i++){
            int max = min(lArr[i],rArr[i]) - height[i];
            count = count + max;
        }
        return count;
    }
};
